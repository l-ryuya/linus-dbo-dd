<?php

declare(strict_types=1);

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('dd_evidence_files', function (Blueprint $table) {
            $table->comment('DD エビデンスファイルメタ情報');

            // システム識別子
            $table->unsignedBigInteger('dd_evidence_file_id')
                ->primary()
                ->comment('内部用連番 PK');
            $table->uuid('public_id')
                ->unique()
                ->default(DB::raw('gen_random_uuid()'))
                ->comment('外部公開用 UUID v4');

            // 紐付け (必須: tenant, case) / (任意: step, result, entity)
            $table->unsignedBigInteger('tenant_id')
                ->comment('所属テナントID');
            $table->unsignedBigInteger('dd_case_id')
                ->comment('DDケースID');
            $table->unsignedBigInteger('dd_step_id')->nullable()
                ->comment('DDステップID（任意）');
            $table->unsignedBigInteger('dd_step_result_id')->nullable()
                ->comment('DDステップ結果ID（任意）');
            $table->unsignedBigInteger('dd_entity_id')->nullable()
                ->comment('DDエンティティID（任意）');

            // ファイル属性
            $table->text('s3_key')
                ->comment('S3キー (バケット/キー)');
            $table->text('original_name')
                ->comment('アップロード前のファイル名');
            $table->text('content_type')
                ->comment('MIMEタイプ');
            $table->unsignedBigInteger('size_bytes')
                ->comment('ファイルサイズ (byte)');

            $table->string('status_type')
                ->default('evidence_file_status')
                ->comment('エビデンスファイル状態種別タイプ');
            $table->string('status_code')
                ->default('uploaded')
                ->comment('エビデンスファイル状態コード');

            $table->unsignedBigInteger('uploader_user_option_id')
                ->comment('アップロード者のユーザー設定ID');

            $table->text('remarks')->nullable()
                ->comment('備考');

            // 監査系
            $table->timestamp('created_at')->useCurrent()
                ->comment('レコード作成日時');
            $table->timestamp('updated_at')->useCurrent()
                ->comment('レコード更新日時');
            $table->timestamp('deleted_at')->nullable()
                ->comment('レコード削除日時');

            // 外部キー
            $table->foreign('tenant_id')
                ->references('tenant_id')
                ->on('tenants')
                ->onUpdate('cascade')
                ->onDelete('cascade');

            $table->foreign('dd_case_id')
                ->references('dd_case_id')
                ->on('dd_cases')
                ->onUpdate('cascade')
                ->onDelete('cascade');

            $table->foreign('dd_step_id')
                ->references('dd_step_id')
                ->on('dd_steps')
                ->onUpdate('cascade')
                ->onDelete('cascade');

            $table->foreign('dd_step_result_id')
                ->references('dd_step_result_id')
                ->on('dd_step_results')
                ->onUpdate('cascade')
                ->onDelete('cascade');

            $table->foreign('dd_entity_id')
                ->references('dd_entity_id')
                ->on('dd_entities')
                ->onUpdate('cascade')
                ->onDelete('cascade');

            $table->foreign(['status_type', 'status_code'])
                ->references(['selection_item_type', 'selection_item_code'])
                ->on('selection_items')
                ->onUpdate('cascade')
                ->onDelete('restrict');

            $table->foreign('uploader_user_option_id')
                ->references('user_option_id')
                ->on('user_options')
                ->onUpdate('cascade')
                ->onDelete('restrict');
        });

        // ID列にIDENTITYを追加する
        DB::statement("ALTER TABLE dd_evidence_files ALTER COLUMN dd_evidence_file_id ADD GENERATED BY DEFAULT AS IDENTITY");
        // CHECK制約
        DB::statement("ALTER TABLE dd_evidence_files ADD CONSTRAINT chk_status_type CHECK (status_type = 'evidence_file_status')");
        // ケース内検索を高速化
        DB::statement("CREATE INDEX idx_ef_case_entity ON dd_evidence_files (dd_case_id, dd_entity_id) WHERE deleted_at IS NULL");
        // ステップ/ステップ結果単位検索
        DB::statement("CREATE INDEX idx_ef_step ON dd_evidence_files (dd_step_id) WHERE deleted_at IS NULL");
        DB::statement("CREATE INDEX idx_ef_step_result ON dd_evidence_files (dd_step_result_id) WHERE deleted_at IS NULL");
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('dd_evidence_files');
    }
};
