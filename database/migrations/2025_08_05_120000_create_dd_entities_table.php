<?php

declare(strict_types=1);

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('dd_entities', function (Blueprint $table) {
            $table->comment('デューデリジェンス対象エンティティテーブル');

            // システム識別子
            $table->unsignedBigInteger('dd_entity_id')
                ->primary()
                ->comment('内部用連番 PK');
            $table->uuid('public_id')
                ->unique()
                ->default(DB::raw('gen_random_uuid()'))
                ->comment('外部公開用 UUID v4');

            // 属性
            $table->unsignedBigInteger('tenant_id')
                ->comment('所属テナントID');

            $table->string('dd_entity_type_type')
                ->default('dd_entity_type')
                ->comment('選択肢アイテム種別:固定値\'dd_entity_type\'');
            $table->string('dd_entity_type_code')
                ->comment('dd_entity_typeに対応するコード値（company / individual）');

            // 監査系
            $table->timestamp('created_at')->useCurrent()
                ->comment('レコード作成日時');
            $table->timestamp('updated_at')->useCurrent()
                ->comment('レコード更新日時');
            $table->timestamp('deleted_at')->nullable()
                ->comment('レコード論理削除日時');

            // 外部キー
            $table->foreign('tenant_id')
                ->references('tenant_id')
                ->on('tenants')
                ->onUpdate('cascade')
                ->onDelete('cascade');

            $table->foreign(['dd_entity_type_type', 'dd_entity_type_code'])
                ->references(['selection_item_type', 'selection_item_code'])
                ->on('selection_items')
                ->onUpdate('cascade')
                ->onDelete('restrict');
        });

        // ID列にIDENTITYを追加する
        DB::statement("ALTER TABLE dd_entities ALTER COLUMN dd_entity_id ADD GENERATED BY DEFAULT AS IDENTITY");
        // CHECK制約
        DB::statement("ALTER TABLE dd_entities ADD CONSTRAINT chk_dd_entity_type_type CHECK (dd_entity_type_type = 'dd_entity_type')");
        // 追加インデックス（論理削除されていないデータのみ対象の部分インデックス）
        DB::statement("CREATE INDEX idx_dd_entities_type ON dd_entities (dd_entity_type_code) WHERE deleted_at IS NULL");
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('dd_entities');
    }
};
