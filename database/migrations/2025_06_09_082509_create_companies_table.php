<?php

declare(strict_types=1);

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('companies', function (Blueprint $table) {
            $table->comment('法人テーブル（顧客・運営会社・協業先など）');

            // システム識別子
            $table->unsignedBigInteger('company_id')
                ->primary()
                ->comment('内部用連番 PK');
            $table->uuid('public_id')
                ->unique()
                ->default(DB::raw('gen_random_uuid()'))
                ->comment('外部公開用 UUID v4');

            // ビジネス識別子
            $table->unsignedBigInteger('tenant_id')
                ->comment('所属テナント ID（必須）');

            // 属性
            $table->string('company_name_en')
                ->comment('法人英名');
            $table->char('default_language_code', 3)
                ->comment('デフォルト言語');
            $table->char('country_code_alpha3', 3)
                ->comment('本社所在地国コード (ISO-3166-1 alpha-3)');

            $table->string('postal')->nullable()
                ->comment('郵便番号');
            $table->string('state')->nullable()
                ->comment('都道府県・州');
            $table->string('city')->nullable()
                ->comment('市区町村');
            $table->string('street')->nullable()
                ->comment('番地');
            $table->string('building')->nullable()
                ->comment('建物名・部屋番号');
            $table->text('website_url')->nullable()
                ->comment('法人サイトURL');
            $table->text('shareholders_url')->nullable()
                ->comment('株主情報URL');
            $table->text('executives_url')->nullable()
                ->comment('役員情報URL');
            $table->string('remarks')->nullable()
                ->comment('備考');

            // 監査系
            $table->timestamp('created_at')->useCurrent()
                ->comment('レコード作成日時');
            $table->timestamp('updated_at')->useCurrent()
                ->comment('レコード更新日時');
            $table->timestamp('deleted_at')->nullable()
                ->comment('レコード削除日時');

            // 外部キー
            $table->foreign('tenant_id')
                ->references('tenant_id')
                ->on('tenants')
                ->onUpdate('cascade')
                ->onDelete('cascade');

            $table->foreign('country_code_alpha3')
                ->references('country_code_alpha3')
                ->on('country_regions')
                ->onUpdate('cascade')
                ->onDelete('set null');
        });

        // ID列にIDENTITYを追加する
        DB::statement("ALTER TABLE companies ALTER COLUMN company_id ADD GENERATED BY DEFAULT AS IDENTITY");
        DB::statement("ALTER TABLE companies ADD COLUMN company_code_seq BIGINT GENERATED ALWAYS AS IDENTITY");
        DB::statement("COMMENT ON COLUMN companies.company_code_seq IS '法人コード生成用カウンタ'");
        // 生成列とユニーク制約（PostgreSQLのSQLレベルで追加）
        DB::statement("ALTER TABLE companies ADD COLUMN company_code TEXT GENERATED ALWAYS AS ('CO-' || lpad(company_code_seq::text, 6, '0')) STORED");
        DB::statement("ALTER TABLE companies ADD CONSTRAINT uq_company_code UNIQUE (company_code)");
        DB::statement("COMMENT ON COLUMN companies.company_code IS '法人コード（外部公開用）'");
        DB::statement("ALTER TABLE companies ADD CONSTRAINT companies_tenant_id_company_code_unique UNIQUE (tenant_id, company_code)");

        // 論理削除されていないデータのみ対象の部分インデックス
        DB::statement("CREATE INDEX idx_comp_deleted_null ON companies (company_id) WHERE deleted_at IS NULL");
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('companies');
    }
};
