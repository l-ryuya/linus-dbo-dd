<?php

declare(strict_types=1);

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('dd_steps', function (Blueprint $table) {
            $table->comment('デューデリジェンスケースステップテーブル');

            // システム識別子
            $table->unsignedBigInteger('dd_step_id')
                ->primary()
                ->comment('内部用連番 PK');
            $table->uuid('public_id')
                ->unique()
                ->default(DB::raw('gen_random_uuid()'))
                ->comment('外部公開用 UUID v4');

            // 属性
            $table->unsignedBigInteger('tenant_id')
                ->comment('所属テナントID');
            $table->unsignedBigInteger('dd_case_id')
                ->comment('DDケースID');

            $table->string('dd_step_type')
                ->default('dd_step')
                ->comment('DDステップタイプ');
            $table->string('dd_step_code')
                ->comment('DDステップコード');

            $table->unsignedBigInteger('step_user_option_id')->nullable()
                ->comment('DDステップ担当者のユーザー設定ID');
            $table->text('step_comment')->nullable()
                ->comment('DDステップコメント');
            $table->timestamp('step_completed_at')->nullable()
                ->comment('DDステップ完了日時');

            $table->boolean('is_updated')->nullable()
                ->comment('更新済フラグ');
            $table->boolean('rerun_required')->nullable()
                ->comment('要再実行フラグ');

            $table->jsonb('dd_evidence_blob')->nullable()
                ->comment('DDステップエビデンス');
            $table->jsonb('dd_relations_snapshot')->nullable()
                ->comment('株主・役員構成スナップショット');

            $table->text('remarks')->nullable()
                ->comment('備考');

            // 監査系
            $table->timestamp('created_at')->useCurrent()
                ->comment('レコード作成日時');
            $table->timestamp('updated_at')->useCurrent()
                ->comment('レコード更新日時');
            $table->timestamp('deleted_at')->nullable()
                ->comment('レコード削除日時（論理削除）');

            // 外部キー
            $table->foreign('tenant_id')
                ->references('tenant_id')
                ->on('tenants')
                ->onUpdate('cascade')
                ->onDelete('cascade');

            $table->foreign('dd_case_id')
                ->references('dd_case_id')
                ->on('dd_cases')
                ->onUpdate('cascade')
                ->onDelete('cascade');

            $table->foreign(['dd_step_type', 'dd_step_code'])
                ->references(['selection_item_type', 'selection_item_code'])
                ->on('selection_items')
                ->onUpdate('cascade')
                ->onDelete('restrict');

            $table->foreign('step_user_option_id')
                ->references('user_option_id')
                ->on('user_options')
                ->onUpdate('cascade')
                ->onDelete('restrict');
        });

        // ID列にIDENTITYを追加する
        DB::statement("ALTER TABLE dd_steps ALTER COLUMN dd_step_id ADD GENERATED BY DEFAULT AS IDENTITY");
        // CHECK制約
        DB::statement("ALTER TABLE dd_steps ADD CONSTRAINT chk_dd_step_type CHECK (dd_step_type = 'dd_step')");
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('dd_steps');
    }
};
